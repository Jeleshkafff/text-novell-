#include "Inventory.h"
#include "Skyline.h"

// функция, показывающая меню
int show_menu(const inventory_menu *m, int max_item)
{
	system("cls");
	// вывод всех пунктов меню в аккуратный столбик
	for (int i = 0; i < max_item; i++)
	{
		cout << setw(4) << m[i].action << ". " << m[i].text << endl;
	}
	cout << setw(4) << 0 << ". выйти" << endl;
	// переменная, запоминающая выбранное действие
	int variant;
	// вывод просьбы о выборе действия в меню
	cout << "Выберите действие:	";
	// ввод выбранного действия
	cin >> variant;
	// возврат (чтобы была возможность проделать несколько действий в инвентаре без завершения программы)
	return variant;
}

// функция показа предметов, которые уже есть в инвентаре
void show_items()
{
	system("cls");
	// вывод предметов инвентаря на экран
	for (int i = 3; i < 11; i++)
	{
		cout << MainHero.inventory_items[i] << endl;
	}
	system("pause");
}


// функция псевдосортировки (поиск по слову)
void find_items()
{
	system("cls");
	show_items();
	// переменная, хранящее слово/строку/подстроку для поиска
	string word;
	// переменная-счётчик
	int h = 0;
	// просьба о вводе слова для поиска
	cout << endl << "Введите слово для поиска: " << endl << endl;
	// ввод слова для поиска
	cin >> word;
	// вывод результатов поиска с введённым словом
	cout << endl << "Результаты поиска со словом <<" << word << ">>: " << endl << endl;
	// цикл поиска слова в строках файла
	for (int j = 3; j < 11; j++)
	{
		// условие вывода строк с искомым словом
		if (MainHero.inventory_items[j].find(word, 0) != string::npos)
		{
			// вывод строк, с искомым словом
			cout << MainHero.inventory_items[j] << endl;
			h = h++;
		}
	}
	// условие вывода сообщения о том, что поиск не дал результатов
	if (h == 0)
	{
		// вывод сообщения о том, что поиск не дал результатов
		cout << "В вашем инвентаре предметов со словом <<" << word << ">> нет" << endl;
	}
	// чтение символов с клавиатуры
	_getch();
}

void use_items()
{
	system("cls");
	// переменная, хранящее слово/строку/подстроку для поиска
	string word;
	// переменная-счётчик
	int h = 0;
	// переменная для ввода
	int a;
	// ввод слова для поиска
	word = "зелье";
	// вывод результатов поиска с введённым словом
	cout << endl << "Вы можете использовать: " << endl;
	// цикл поиска слова в строках файла
	for (int j = 3; j < 11; j++)
	{
		// условие вывода строк с искомым словом
		if (MainHero.inventory_items[j].find(word, 0) != string::npos)
		{
			// вывод строк, с искомым словом
			cout << MainHero.inventory_items[j] << endl;
			h = h++;
			// предложение использовать предмет
			cout << endl << "Нажмите << + >>, чтобы использовать предмет" << endl;
			// ввод согласия
			char a;
			cin >> a;
			if (a == '+')
			{
				// изменения значения здоровья
				MainHero.Life += 10;
				// удаление предмета из инвентаря
				MainHero.inventory_items[j] = "";
				// сохранение
				save();
			}
		}
	}
	// условие вывода сообщения о том, что поиск не дал результатов
	if (h == 0)
	{
		// вывод сообщения о том, что поиск не дал результатов
		cout << "В вашем инвентаре нет предметов, которые можно использовать" << endl;
	}
	// чтение символов с клавиатуры
	_getch();
}

// функия, производящая сюжетные изменения в игре при переходе на определённую локацию (добавление в инвентарь сюжетных предметов)
void changes()
{
	if (MainHero.location = 0)
	{
		MainHero.inventory_items[3]="меч 1 ур.";
	}
	if (MainHero.location = 1)
	{
		MainHero.inventory_items[4] = "броня 1 ур.";
		MainHero.inventory_items[5] = "зелье_лечения";
	}	
	if (MainHero.location = 3)
	{
		MainHero.Life+=10;
	}	
	if (MainHero.location = 4)
	{
		MainHero.inventory_items[3] = "меч 2 ур.";
		MainHero.inventory_items[6] = "отмычка";
	}	
}
